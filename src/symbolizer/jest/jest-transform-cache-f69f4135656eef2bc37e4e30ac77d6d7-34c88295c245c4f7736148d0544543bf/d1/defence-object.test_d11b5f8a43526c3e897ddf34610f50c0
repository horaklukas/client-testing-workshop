'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _defenceObject = require('../defence-object');var _defenceObject2 = _interopRequireDefault(_defenceObject);
var _prioritySelector = require('../priority-selector');var _prioritySelector2 = _interopRequireDefault(_prioritySelector);
var _enzyme = require('enzyme');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('Defence component', function () {
  var props = {
    priority: null,
    priorities: [1, 2, 3, 4, 5, 6, 7, 8, 9],
    checked: false,
    onToggleDefence: jest.fn(),
    onChangePriority: jest.fn() };


  it('should add class checked to checkbox if depend on prop checked', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_defenceObject2.default, props));
    var checkbox = void 0;

    wrapper.setProps({
      checked: true });

    checkbox = wrapper.find('.checkbox');
    expect(checkbox.prop('className')).toEqual('checkbox checked');

    wrapper.setProps({
      checked: false });

    checkbox = wrapper.find('.checkbox');
    expect(checkbox.prop('className')).toEqual('checkbox');
  });

  it('should not show priority selector when not checked', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_defenceObject2.default, _extends({}, props, { checked: false })));

    var selector = wrapper.find(_prioritySelector2.default);
    expect(selector).toHaveLength(10);
  });

  it('should show priority selector when checked', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_defenceObject2.default, _extends({}, props, { checked: true })));

    var selector = wrapper.find(_prioritySelector2.default);
    expect(selector).toHaveLength(1);
  });

  it('should call toggleDefence callback when checkbox clicked', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_defenceObject2.default, _extends({}, props, { checked: true })));
    var checkbox = wrapper.find('.checkbox');

    checkbox.simulate('click');
    expect(props.onToggleDefence).toHaveBeenCalledTimes(1);

    checkbox.simulate('click');
    expect(props.onToggleDefence).toHaveBeenCalledTimes(2);
  });
});